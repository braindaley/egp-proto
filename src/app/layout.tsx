
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { Toaster } from "@/components/ui/toaster";
import { Footer } from "@/components/footer";
import { Header } from "@/components/header";
import { ZipCodeBanner } from "@/components/ui/zip-code-banner";
import { AuthProvider } from "@/hooks/use-auth";
import { ZipCodeProvider } from "@/hooks/use-zip-code";
import type { Congress } from '@/types';

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function getCongresses(): Promise<Congress[]> {
  const baseUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:9002';
  const url = `${baseUrl}/api/congresses`;
  try {
    const res = await fetch(url, { next: { revalidate: 3600 } }); // Revalidate every hour
    if (!res.ok) {
      console.error(`Failed to fetch congresses from internal API: ${res.status}`);
      return [];
    }
    const data = await res.json();
    return data.congresses || [];
  } catch (error) {
    console.error('Error fetching congresses from internal API:', error);
    return [];
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const congresses = await getCongresses();
  
  return (
    <html lang="en">
      <body className={inter.className}>
        <AuthProvider>
          <ZipCodeProvider>
            <Header congresses={congresses} />
            {children}
            <Toaster />
            <Footer />
            <ZipCodeBanner />
          </ZipCodeProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
